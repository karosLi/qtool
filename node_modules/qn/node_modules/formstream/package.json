{
  "_args": [
    [
      {
        "raw": "formstream@^1.0.0",
        "scope": null,
        "escapedName": "formstream",
        "name": "formstream",
        "rawSpec": "^1.0.0",
        "spec": ">=1.0.0 <2.0.0",
        "type": "range"
      },
      "/Users/Eugene/leke/qtool/node_modules/qn"
    ]
  ],
  "_cnpm_publish_time": 1482127773790,
  "_from": "formstream@^1.0.0",
  "_hasShrinkwrap": false,
  "_id": "formstream@1.1.0",
  "_location": "/qn/formstream",
  "_nodeVersion": "6.9.2",
  "_npmOperationalInternal": {
    "host": "packages-18-east.internal.npmjs.com",
    "tmp": "tmp/formstream-1.1.0.tgz_1482127773093_0.3919559372588992"
  },
  "_npmUser": {
    "name": "fengmk2",
    "email": "fengmk2@gmail.com"
  },
  "_npmVersion": "3.10.9",
  "_phantomChildren": {},
  "_requested": {
    "raw": "formstream@^1.0.0",
    "scope": null,
    "escapedName": "formstream",
    "name": "formstream",
    "rawSpec": "^1.0.0",
    "spec": ">=1.0.0 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/qn"
  ],
  "_resolved": "http://registry.npm.taobao.org/formstream/download/formstream-1.1.0.tgz",
  "_shasum": "51f3970f26136eb0ad44304de4cebb50207b4479",
  "_shrinkwrap": null,
  "_spec": "formstream@^1.0.0",
  "_where": "/Users/Eugene/leke/qtool/node_modules/qn",
  "author": {
    "name": "fengmk2",
    "email": "fengmk2@gmail.com",
    "url": "http://fengmk2.github.com"
  },
  "bugs": {
    "url": "https://github.com/node-modules/formstream/issues"
  },
  "contributors": [
    {
      "name": "fengmk2",
      "email": "fengmk2@gmail.com",
      "url": "https://github.com/fengmk2"
    },
    {
      "name": "xingrz",
      "email": "chenxingyu92@gmail.com",
      "url": "https://github.com/xingrz"
    }
  ],
  "dependencies": {
    "destroy": "^1.0.4",
    "mime": "^1.3.4",
    "pause-stream": "~0.0.11"
  },
  "description": "A multipart/form-data encoded stream, helper for file upload.",
  "devDependencies": {
    "autod": "*",
    "connect-multiparty": "1",
    "express": "4",
    "istanbul": "*",
    "mocha": "*",
    "pedding": "1",
    "should": "4",
    "urllib": "2"
  },
  "directories": {},
  "dist": {
    "shasum": "51f3970f26136eb0ad44304de4cebb50207b4479",
    "size": 5277,
    "noattachment": false,
    "tarball": "http://registry.npm.taobao.org/formstream/download/formstream-1.1.0.tgz"
  },
  "files": [
    "lib"
  ],
  "gitHead": "aab4ac77ca623089ad4fca3c70154723848d7cb3",
  "homepage": "https://github.com/node-modules/formstream#readme",
  "keywords": [
    "form",
    "stream",
    "multipart",
    "form-data",
    "upload",
    "postfile",
    "request"
  ],
  "license": "MIT",
  "main": "lib/formstream.js",
  "maintainers": [
    {
      "name": "fengmk2",
      "email": "fengmk2@gmail.com"
    }
  ],
  "name": "formstream",
  "optionalDependencies": {},
  "publish_time": 1482127773790,
  "readme": "# formstream\n\n[![NPM version][npm-image]][npm-url]\n[![build status][travis-image]][travis-url]\n[![Test coverage][coveralls-image]][coveralls-url]\n[![David deps][david-image]][david-url]\n[![npm download][download-image]][download-url]\n\n[npm-image]: https://img.shields.io/npm/v/formstream.svg?style=flat-square\n[npm-url]: https://npmjs.org/package/formstream\n[travis-image]: https://img.shields.io/travis/node-modules/formstream.svg?style=flat-square\n[travis-url]: https://travis-ci.org/node-modules/formstream\n[coveralls-image]: https://img.shields.io/coveralls/node-modules/formstream.svg?style=flat-square\n[coveralls-url]: https://coveralls.io/r/node-modules/formstream?branch=master\n[david-image]: https://img.shields.io/david/node-modules/formstream.svg?style=flat-square\n[david-url]: https://david-dm.org/node-modules/formstream\n[download-image]: https://img.shields.io/npm/dm/formstream.svg?style=flat-square\n[download-url]: https://npmjs.org/package/formstream\n\nA [multipart/form-data](http://tools.ietf.org/html/rfc2388) encoded stream, helper for file upload.\n\n## Install\n\n```bash\n$ npm install formstream\n```\n\n## Quick Start\n\n```js\nvar formstream = require('formstream');\nvar http = require('http');\n\nvar form = formstream();\n\n// form.file('file', filepath, filename);\nform.file('file', './logo.png', 'upload-logo.png');\n\n// other form fields\nform.field('foo', 'fengmk2').field('love', 'aerdeng');\n\n// even send file content buffer directly\n// form.buffer(name, buffer, filename, mimeType)\nform.buffer('file2', new Buffer('This is file2 content.'), 'foo.txt');\n\nvar options = {\n  method: 'POST',\n  host: 'upload.cnodejs.net',\n  path: '/store',\n  headers: form.headers()\n};\nvar req = http.request(options, function (res) {\n  console.log('Status: %s', res.statusCode);\n  res.on('data', function (data) {\n    console.log(data.toString());\n  });\n});\n\nform.pipe(req);\n```\n\n### Chaining\n\n```js\nvar fs = require('fs');\nvar formstream = require('formstream');\n\nvar filepath = './logo.png';\nfs.stat(filepath, function (err, stat) {\n  formstream().field('status', 'share picture')\n      .field('access_token', 'your access token')\n      .file('pic', filepath, 'logo.png', stat.size)\n      .pipe(process.stdout); // your request stream\n});\n```\n\n## API Doc\n\n### formstream()\n\nCreate a form instance.\n\n#### Returns\n\nForm - form instance\n\n### FormStream#field(name, value)\n\nAdd a normal field to the form.\n\n#### Arguments\n\n- **name** String - Name of field\n- **value** String - Value of field\n\n#### Returns\n\nForm - form instance\n\n### FormStream#file(name, filepath[, filename][, filesize])\n\nAdd a local file to be uploaded to the form.\n\n#### Arguments\n\n- **name** String - Name of file field\n- **filepath** String - Local path of the file to be uploaded\n- ***filename*** String - Optional. Name of the file (will be the base name of `filepath` if empty)\n- ***filesize*** Number - Optional. Size of the file (will not generate `Content-Length` header if not specified)\n\n#### Returns\n\nForm - form instance\n\n### FormStream#buffer(name, buffer, filename[, contentType])\n\nAdd a buffer as a file to upload.\n\n#### Arguments\n\n- **name** String - Name of field\n- **buffer** Buffer - The buffer to be uploaded\n- **filename** String - The file name that tells the remote server\n- ***contentType*** String - Optional. Content-Type (aka. MIME Type) of content (will be infered with `filename` if empty)\n\n#### Returns\n\nForm - form instance\n\n### FormStream#stream(name, stream, filename[, contentType][, size])\n\nAdd a readable stream as a file to upload. Event 'error' will be emitted if an error occured.\n\n#### Arguments\n\n- **name** String - Name of field\n- **stream** [stream.Readable](http://nodejs.org/api/stream.html#stream_class_stream_readable) - A readable stream to be piped\n- **filename** String - The file name that tells the remote server\n- ***contentType*** String - Optional. Content-Type (aka. MIME Type) of content (will be infered with `filename` if empty)\n- ***size*** Number - Optional. Size of the stream (will not generate `Content-Length` header if not specified)\n\n#### Returns\n\nForm - form instance\n\n### FormStream#headers([headers])\n\nGet headers for the request.\n\n#### Arguments\n\n- ***headers*** Object - Additional headers\n\n#### Example\n\n```js\nvar headers = form.headers({\n  'Authorization': 'Bearer kei2akc92jmznvnkeh09sknzdk',\n  'Accept': 'application/vnd.github.v3.full+json'\n});\n```\n\n#### Returns\n\nObject - Headers to be sent.\n\n### Event 'error'\n\nEmitted if there was an error receiving data.\n\n### Event 'data'\n\nThe 'data' event emits when a Buffer was used.\n\nSee [Node.js Documentation](http://nodejs.org/api/stream.html#stream_event_data) for more.\n\n### Event 'end'\n\nEmitted when the stream has received no more 'data' events will happen.\n\nSee [Node.js Documentation](http://nodejs.org/api/stream.html#stream_event_end) for more.\n\n## License\n\n(The MIT License)\n\nCopyright (c) 2012 - 2014 fengmk2 &lt;fengmk2@gmail.com&gt;\nCopyright(c) node-modules and other contributors.\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/node-modules/formstream.git"
  },
  "scripts": {
    "autod": "autod -w --prefix '^'",
    "jshint": "jshint .",
    "test": "mocha -R spec -t 5000 -r should test/*.test.js",
    "test-cov": "istanbul cover node_modules/.bin/_mocha -- -t 5000 -r should test/*.test.js",
    "test-travis": "istanbul cover node_modules/.bin/_mocha --report lcovonly -- -t 5000 -r should test/*.test.js"
  },
  "version": "1.1.0"
}
